// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using evojacu.Models;

#nullable disable

namespace evojacu.Migrations
{
    [DbContext(typeof(evojacuDBContext))]
    [Migration("20231223204217_ena1")]
    partial class ena1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("evojacu.Models.FazaPosla", b =>
                {
                    b.Property<int>("FazaPoslaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FazaPoslaID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FazaPoslaID");

                    b.ToTable("FazePoslova");
                });

            modelBuilder.Entity("evojacu.Models.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("evojacu.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("evojacu.Models.Posao", b =>
                {
                    b.Property<int>("ZadatakID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZadatakID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FazaPoslaId")
                        .HasColumnType("int");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<bool>("JePonuda")
                        .HasColumnType("bit");

                    b.Property<string>("OpisPosla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransakcijaId")
                        .HasColumnType("int");

                    b.Property<int>("VrijemeIzvrsavanjaId")
                        .HasColumnType("int");

                    b.HasKey("ZadatakID");

                    b.HasIndex("FazaPoslaId");

                    b.HasIndex("GradId");

                    b.HasIndex("TransakcijaId");

                    b.HasIndex("VrijemeIzvrsavanjaId");

                    b.ToTable("Poslovi");
                });

            modelBuilder.Entity("evojacu.Models.Poslodavac", b =>
                {
                    b.Property<int>("PoslodavacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoslodavacID"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("NazivKompanije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PoslodavacID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Poslodavci");
                });

            modelBuilder.Entity("evojacu.Models.Posloprimaoc", b =>
                {
                    b.Property<int>("PosloprimaocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosloprimaocID"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Strucnost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosloprimaocID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Posloprimaoci");
                });

            modelBuilder.Entity("evojacu.Models.StanjePlacanja", b =>
                {
                    b.Property<int>("StanjePlacanjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StanjePlacanjaID"));

                    b.Property<string>("OpisStanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StanjePlacanjaID");

                    b.ToTable("StanjaPlacanja");
                });

            modelBuilder.Entity("evojacu.Models.Transakcija", b =>
                {
                    b.Property<int>("TransakcijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransakcijaID"));

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NacinPlacanjaId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StanjePlacanjaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeTransakcije")
                        .HasColumnType("datetime2");

                    b.HasKey("TransakcijaID");

                    b.HasIndex("NacinPlacanjaId");

                    b.HasIndex("StanjePlacanjaId");

                    b.ToTable("Transakcije");
                });

            modelBuilder.Entity("evojacu.Models.VrijemeIzvrsavanja", b =>
                {
                    b.Property<int>("VrijemeIzvrsavanjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrijemeIzvrsavanjaID"));

                    b.Property<DateTime>("KrajVremena")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PocetakVremena")
                        .HasColumnType("datetime2");

                    b.HasKey("VrijemeIzvrsavanjaID");

                    b.ToTable("VremenaIzvrsavanja");
                });

            modelBuilder.Entity("evojacu.Models.VrstaPlacanja", b =>
                {
                    b.Property<int>("VrstaPlacanjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaPlacanjaID"));

                    b.Property<string>("BrojKartice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipPlacanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VrstaPlacanjaID");

                    b.ToTable("VrstePlacanja");
                });

            modelBuilder.Entity("evojacu.Models.Posao", b =>
                {
                    b.HasOne("evojacu.Models.FazaPosla", "FazaPosla")
                        .WithMany()
                        .HasForeignKey("FazaPoslaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("evojacu.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("evojacu.Models.Transakcija", "Transakcija")
                        .WithMany()
                        .HasForeignKey("TransakcijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("evojacu.Models.VrijemeIzvrsavanja", "VrijemeIzvrsavanja")
                        .WithMany()
                        .HasForeignKey("VrijemeIzvrsavanjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FazaPosla");

                    b.Navigation("Grad");

                    b.Navigation("Transakcija");

                    b.Navigation("VrijemeIzvrsavanja");
                });

            modelBuilder.Entity("evojacu.Models.Poslodavac", b =>
                {
                    b.HasOne("evojacu.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("evojacu.Models.Posloprimaoc", b =>
                {
                    b.HasOne("evojacu.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("evojacu.Models.Transakcija", b =>
                {
                    b.HasOne("evojacu.Models.VrstaPlacanja", "VrstaPlacanja")
                        .WithMany()
                        .HasForeignKey("NacinPlacanjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("evojacu.Models.StanjePlacanja", "StanjePlacanja")
                        .WithMany()
                        .HasForeignKey("StanjePlacanjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StanjePlacanja");

                    b.Navigation("VrstaPlacanja");
                });
#pragma warning restore 612, 618
        }
    }
}
